#This file was originally generated by PyScripter's unit test wizard
import json
import unittest
import application

class TestJsonToDictionary(unittest.TestCase):

    def setUp(self):
        self.data = {
                "date": "2019-10-10",
                "time": "0700",
                "condition": [
                    {"level": "1",
                        "location": {
                        "x": "1",
                        "y": "1"
                        },
                    "status":"occupied",
                    "car":{
                        "license": "USA001",
                        "color": "blue",
                        "size": "motorcycle"
                        },
                    "oversize": "N"
                    }]
                }

    def tearDown(self):
        del self.data

    def test_class(self):
        for each in self.data['condition']:
            result_raw = application.JsonToDictionary(json.dumps(each))
            result = result_raw.__dict__

            self.assertEqual(result['level'], '1')
            self.assertEqual(result['x'], '1')
            self.assertEqual(result['y'], '1')
            self.assertEqual(result['status'], 'occupied')


class TestGlobalFunctions(unittest.TestCase):

    def setUp(self):
        self.data = {'level': '1', 'x': '1', 'y': '1', 'size': 'motorcycle',
              'license': 'USA001', 'color': 'blue', 'status': 'occupied',
              'oversize': 'N'}

    def tearDown(self):
        del self.data

    def testgo_update_sql_tables(self):

        result = application.go_update_sql_tables(self.data)

        self.assertEqual(result,True)


if __name__ == '__main__':
    unittest.main()
